commonfields:
  id: CompareLists
  version: -1
name: CompareLists
comment: Compare  two lists and put the differences in context.
script: >
  register_module_line('CompareLists', 'start', __line__())

  demisto.debug('pack name = Common Scripts, pack version = 1.19.29')





  def compare(left, right):
      return {
          'ListCompare':
              {
                  'LeftOnly': [x for x in left if x not in right],
                  'RightOnly': [x for x in right if x not in left],
                  'Both': [x for x in left if x in right]
              }
      }


  def main():
      left = argToList(demisto.args().get('left'))
      right = argToList(demisto.args().get('right'))

      out = compare(left, right)

      demisto.results({
          'Type': entryTypes['note'],
          'ContentsFormat': formats['json'],
          'Contents': json.dumps(out),
          'HumanReadable': 'Set comparisons in Context.',
          'EntryContext': out
      })


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

  register_module_line('CompareLists', 'end', __line__())
type: python
tags: []
enabled: true
args:
- name: left
  required: true
  description: Left list
  isArray: true
- name: right
  required: true
  description: Right list
  isArray: true
outputs:
- contextPath: ListCompare.LeftOnly
  description: Items only found within the list in the left argument
- contextPath: ListCompare.RightOnly
  description: Items only found within the list in the right argument
- contextPath: ListCompare.Both
  description: Common items that were found in both lists
scripttarget: 0
subtype: python3
dockerimage: demisto/python3:3.11.10.113941
runas: DBotWeakRole
fromversion: 5.0.0
nativeimage:
- '8.8'
- '8.6'
