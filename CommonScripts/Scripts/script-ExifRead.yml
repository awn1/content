commonfields:
  id: ExifRead
  version: -1
name: ExifRead
script: >
  register_module_line('ExifRead', 'start', __line__())

  demisto.debug('pack name = Common Scripts, pack version = 1.19.29')


  import exifread




  def get_exif_tags(file_entry_id):
      res = demisto.getFilePath(file_entry_id)
      f = open(res['path'], 'rb')

      tags = exifread.process_file(f)
      arr = []
      for tag in tags:
          arr.append({'tag': str(tag), 'value': str(tags[tag])})

      md = tableToMarkdown('Exif Tags', arr)

      demisto.results({
          'ContentsFormat': formats['json'],
          'Type': entryTypes['note'],
          'Contents': {'Exif': arr},
          'HumanReadable': md,
          'EntryContext': {'Exif': arr}
      })


  def main():
      file_entry_id = demisto.args()['EntryID']
      get_exif_tags(file_entry_id)


  # python2 uses __builtin__ python3 uses builtins

  if __name__ == "__builtin__" or __name__ == "builtins":
      main()

  register_module_line('ExifRead', 'end', __line__())
type: python
subtype: python3
tags:
- Utility
comment: Read image files metadata and provide Exif tags.
enabled: true
args:
- name: EntryID
  required: true
  default: true
  description: Entry ID of image file.
outputs:
- contextPath: Exif.tag
  description: Exif tag name.
  type: string
- contextPath: Exif.value
  description: Exif tag value.
  type: string
scripttarget: 0
dockerimage: demisto/py3-tools:1.0.0.114656
fromversion: 6.5.0
tests:
- ExifReadTest
nativeimage:
- '8.8'
- '8.6'
