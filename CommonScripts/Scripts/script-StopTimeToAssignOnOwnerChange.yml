fromversion: 5.0.0
commonfields:
  id: StopTimeToAssignOnOwnerChange
  version: -1
name: StopTimeToAssignOnOwnerChange
script: >
  register_module_line('StopTimeToAssignOnOwnerChange', 'start', __line__())

  demisto.debug('pack name = Common Scripts, pack version = 1.19.29')





  # ##### Help #####

  # This is an example script. The script is used to stop the Time to Assignment SLA field,

  # once an owner was set to an incident. If you want to use this script, you should go to

  # the Owner field, and set this script as the script to run upon change of field value.



  def main():
      args = demisto.args()
      try:
          if not args.get('old') and args.get('new'):  # If owner was no-one and is now someone:
              demisto.executeCommand("stopTimer", {"timerField": "timetoassignment"})
              demisto.results("Assignment of the incident was successful and so the Time To Assignment"
                              " timer has been stopped.")
      except Exception as e:  # pragma: no cover
          err_msg = f'Encountered an error while running the script: [{e}]'
          return_error(err_msg, error=e)


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

  register_module_line('StopTimeToAssignOnOwnerChange', 'end', __line__())
type: python
subtype: python3
tags:
- field-change-triggered
- example
comment: Stops the "Time To Assign" timer if the owner of the incident was changed.
enabled: true
args:
- name: old
  description: The old value of the changed field.
- name: new
  description: The new value of the changed field.
scripttarget: 0
runas: DBotWeakRole
marketplaces:
- xsoar
tests:
- SLA Scripts - Test
dockerimage: demisto/python3:3.11.10.115186
nativeimage:
- '8.8'
- '8.6'
