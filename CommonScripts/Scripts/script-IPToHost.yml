commonfields:
  id: IPToHost
  version: -1
name: IPToHost
script: >
  register_module_line('IPToHost', 'start', __line__())

  demisto.debug('pack name = Common Scripts, pack version = 1.19.29')



  import socket



  def ip_to_host(ip: str) -> CommandResults:
      host_info = socket.gethostbyaddr(ip)

      if not host_info:
          raise DemistoException('No results were found for the given value.')

      hostname = host_info[0]

      if str(hostname) == ip:
          return CommandResults(readable_output=f"The IP address {ip} has no associated hostname.")

      output = {
          'Hostname': str(hostname),
          'IP': ip
      }

      md = tableToMarkdown('IP to Host', [output])

      return CommandResults(
          outputs=output,
          outputs_prefix='Endpoint',
          outputs_key_field='Hostname',
          readable_output=md,
      )


  def main():
      try:
          ip = demisto.args().get('ip')
          return_results(ip_to_host(ip))
      except Exception as e:
          demisto.error(traceback.format_exc())
          return_error(f'Couldn\'t get the IP host info. Error information: {str(e)}')


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      main()

  register_module_line('IPToHost', 'end', __line__())
type: python
subtype: python3
tags: []
comment: Try to get the hostname correlated with the input IP.
system: true
args:
- name: ip
  required: true
  default: true
  description: The IP to check.
outputs:
- contextPath: Endpoint
  description: The endpoint object.
- contextPath: Endpoint.Hostname
  description: The endpoint hostname.
  type: string
- contextPath: Endpoint.IP
  description: The endpoint IP.
  type: string
scripttarget: 0
fromversion: 5.0.0
dockerimage: demisto/python3:3.11.11.1940698
tests:
- IPToHost - Test
nativeimage:
- '8.8'
- '8.6'
