args:
- description: The file entry ID.
  name: entryId
  required: true
- description: The list name in which to store the file. The list must exist in Demisto.
  name: listName
  required: true
- auto: PREDEFINED
  defaultValue: 'false'
  description: Whether to zip the file before storing it in the list.
  name: zipFile
  predefined:
  - 'true'
  - 'false'
comment: "Encode a file as base64 and store it in a Demisto list.\n"
commonfields:
  id: FileToBase64List
  version: -1
enabled: true
name: FileToBase64List
script: >
  register_module_line('FileToBase64List', 'start', __line__())

  demisto.debug('pack name = Common Scripts, pack version = 1.19.29')




  import base64

  import zlib



  def get_file_data(file_path: str, is_zip: bool = False):
      with open(file_path, 'rb') as f:
          data = f.read()
      if is_zip:
          data = zlib.compress(data)
      return base64.b64encode(data).decode('utf-8')


  def main():
      list_name = demisto.args()['listName']
      is_zip = (demisto.args()['zipFile'] == 'true')
      entry_id = demisto.args()['entryId']

      res = demisto.getFilePath(entry_id)
      if not res:
          return_error(f"Entry {entry_id} not found")
      file_path = res['path']

      file_base64 = get_file_data(file_path, is_zip)

      res = demisto.executeCommand("createList", {"listName": list_name, "listData": file_base64})
      if isError(res):
          return res

      return {
          'Contents': file_base64,
          'ContentsFormat': formats['text'],
          'HumanReadable': tableToMarkdown(
              'File successfully stored in list',
              {
                  'File Entry ID': entry_id,
                  'List Name': list_name,
                  'Size': len(file_base64)
              }
          ),
          'HumanReadableFormat': formats['markdown'],
      }


  if __name__ in ('__main__', '__builtin__', 'builtins'):
      demisto.results(main())

  register_module_line('FileToBase64List', 'end', __line__())
tags:
- Utility
- list
timeout: '0'
type: python
subtype: python3
runas: DBotWeakRole
tests:
- No Test
fromversion: 5.0.0
dockerimage: demisto/python3:3.11.10.115186
nativeimage:
- '8.8'
- '8.6'
