commonfields:
  id: MarkAsNoteByTag
  version: -1
name: MarkAsNoteByTag
script: >
  register_module_line('MarkAsNoteByTag', 'start', __line__())

  demisto.debug('pack name = Common Scripts, pack version = 1.19.29')





  def mark_as_note(entries):
      if isError(entries[0]):
          demisto.results(
              {'Type': entryTypes['error'], 'ContentsFormat': formats['text'], 'Contents': 'Unable to retrieve entries'})
      else:
          ids = ''
          for e in entries:
              tags = e.get('Metadata', {}).get('tags')
              if not tags:
                  tags = []
              if demisto.getArg('tag') in tags:
                  if ids == '':
                      ids = e['Metadata']['id']
                  else:
                      ids += ',' + e['Metadata']['id']
          if ids != '':
              demisto.results(demisto.executeCommand('markAsNote', {'entryIDs': ids}))
          else:
              demisto.results({'Type': entryTypes['error'], 'ContentsFormat': formats['text'],
                               'Contents': "No entries with '" + demisto.getArg('tag') + "' found"})


  def main():
      entries = demisto.executeCommand('getEntries', {})
      mark_as_note(entries)


  if __name__ in ('__main__', '__builtin__', 'builtins'):  # pragma: no cover
      main()

  register_module_line('MarkAsNoteByTag', 'end', __line__())
type: python
subtype: python3
tags:
- Utility
comment: Mark entries as notes if they are tagged with given tag.
enabled: true
args:
- name: tag
  required: true
  default: true
  description: Entries with the given tag will be marked as notes.
scripttarget: 0
fromversion: 5.0.0
dockerimage: demisto/python3:3.11.10.115186
tests:
- No tests (auto formatted)
nativeimage:
- '8.8'
- '8.6'
