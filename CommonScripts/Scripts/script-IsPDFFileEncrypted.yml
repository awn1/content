commonfields:
  id: IsPDFFileEncrypted
  version: -1
name: IsPDFFileEncrypted
script: >
  register_module_line('IsPDFFileEncrypted', 'start', __line__())

  demisto.debug('pack name = Common Scripts, pack version = 1.19.29')




  import PyPDF2



  def is_pdf_encrypted(file_path: str) -> bool:
      with open(file_path, "rb") as f:
          reader = PyPDF2.PdfReader(f)
          return reader.is_encrypted


  def main():  # pragma: no cover
      args = demisto.args()
      entry_id = args.get('EntryID')
      file_path = demisto.getFilePath(entry_id).get('path')
      if not file_path:
          raise DemistoException("File not found. Please enter a valid entry ID.")
      try:
          return_results("yes" if is_pdf_encrypted(file_path) else "no")
      except Exception as e:
          demisto.error(traceback.format_exc())
          return_error(str(e))


  if __name__ in ["__main__", "__builtin__", "builtins"]:
      main()

  register_module_line('IsPDFFileEncrypted', 'end', __line__())
type: python
subtype: python3
tags:
- Utility
- Condition
comment: Checks whether the PDF file is encrypted.
enabled: true
args:
- name: EntryID
  description: The entry ID of the PDF file.
  required: true
scripttarget: 0
tests:
- No test
fromversion: 6.5.0
dockerimage: demisto/readpdf:1.0.0.2034953
nativeimage:
- '8.8'
- '8.6'
