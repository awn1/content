commonfields:
  id: EmailReputation
  version: -1
name: EmailReputation
script: >
  register_module_line('EmailReputation', 'start', __line__())

  demisto.debug('pack name = Common Scripts, pack version = 1.19.29')





  def email_reputation():
      results = demisto.executeCommand('email', {'email': demisto.get(demisto.args(), 'email')})

      for item in results:
          if isError(item):
              item['Contents'] = item['Brand'] + ' returned an error.\n' + str(item['Contents'])

      demisto.results(results)


  def main():
      email_reputation()


  if __name__ in ('__main__', '__builtin__', 'builtins'):  # pragma: no cover
      main()

  register_module_line('EmailReputation', 'end', __line__())
type: python
subtype: python3
tags:
- enhancement
comment: A context script for Email entities.
enabled: true
args:
- name: email
  required: true
  default: true
  description: Email address to look up.
scripttarget: 0
fromversion: 5.0.0
marketplaces:
- xsoar
- marketplacev2
- platform
dockerimage: demisto/python3:3.12.8.1983910
tests:
- No tests (auto formatted)
nativeimage:
- '8.8'
- '8.6'
