.ship-code-check-schedule-rule:
  rules:
    - if: '$CI_PIPELINE_SOURCE =~ /^(schedule|trigger)$/ && $SHIP_CODE_CHECK == "true"'

.ship-code-check-schedule-rule-always:
  rules:
    - if: '$CI_PIPELINE_SOURCE =~ /^(schedule|trigger)$/ && $SHIP_CODE_CHECK == "true"'
      when: always

cloning-repositories-ship-code-check:
  stage: .pre
  extends:
    - .ship-code-check-schedule-rule
    - .cloning-repositories
  script:
    - job-done


ship-code-check:
  stage: ship-code-check
  extends:
    - .ship-code-check-schedule-rule
    - .default-job-settings
  tags:
    - content-long-running-1738-sa@xdr-gitlab-prod-eu-01.iam.gserviceaccount.com
  script:
    - echo "Hello World!!!"
  # variables:
  #   GCS_MARKET_BUCKET_DEV: "marketplace-dist-dev"
  #   GCS_ARTICAT_BUCKET: "xsoar-ci-artifacts"
  #   KUBERNETES_MEMORY_REQUEST: 8Gi
  #   KUBERNETES_MEMORY_LIMIT: 16Gi
# here we will run the ship code check

jobs-done-check-ship-code-check:
  extends:
    - .ship-code-check-schedule-rule
    - .jobs-done-check
  needs:
    - ship-code-check
  variables:
    WORKFLOW: 'Ship Code Check'
  rules:
    - if: '$SHIP_CODE_CHECK == "true"'
      when: always
  when: always

fan-in-ship-code-check:
  stage: fan-in
  extends:
    - .ship-code-check-schedule-rule
  script:
    - echo "Ship Code Check - fan in"
  when: always


slack-notify-ship-code-check:
  extends:
    - .ship-code-check-schedule-rule-always
    - .trigger-slack-notification
  variables:  # Passes the environment variable from the parent pipeline to the child, which can be useful for cases when triggering pipeline with alternate env variable value passed in the API call.
    ARTIFACTS_FOLDER: "${CI_PROJECT_DIR}/artifacts"
    PIPELINE_TO_QUERY: $CI_PIPELINE_ID
    JOB_NAME: "fan-in-ship-code-check"
    WORKFLOW: "Ship Code Check"
    SLACK_MSG_FILE: "${ARTIFACTS_FOLDER}/slack_msg.txt"
    SLACK_THREAD_MSG_FILE: "${ARTIFACTS_FOLDER}/slack_thread_msg.txt"
    SLACK_MSG_ATTACHMENTS: "${ARTIFACTS_FOLDER}/slack_attachments.json"
    SLACK_CHANNEL: $SLACK_CHANNEL
    SLACK_PARENT_PIPELINE_ID: $SLACK_PARENT_PIPELINE_ID
    SLACK_PARENT_PROJECT_ID: $SLACK_PARENT_PROJECT_ID
    SLACK_JOB: "true"
    SLACK_ALLOW_FAILURE: "true"
    CURRENT_BRANCH_NAME: $INFRA_BRANCH