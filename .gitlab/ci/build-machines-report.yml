.build-machines-report-schedule-rule:
  rules:
    - if: '$CI_PIPELINE_SOURCE =~ /^(schedule|trigger)$/ && $BUILD_MACHINES_REPORT == "true"'

.build-machines-report-schedule-rule-pages:
  rules:
    - if: '$CI_PIPELINE_SOURCE =~ /^(schedule|trigger)$/ && $BUILD_MACHINES_REPORT == "true" && $BUILD_MACHINES_REPORT_PAGES == "true"'

.build-machines-report-schedule-rule-always:
  rules:
    - if: '$CI_PIPELINE_SOURCE =~ /^(schedule|trigger)$/ && $BUILD_MACHINES_REPORT == "true"'
      when: always

.before-script-build-machines-report:
  before_script:
    - source .gitlab/helper_functions.sh
    - !reference [.setup-network-certs]
    - !reference [.poetry-install]
    - !reference [.granting_execute_permissions_on_files]
    - !reference [.setup-artifactory]
    - !reference [.create_artifacts_folder]
    - !reference [.create-artifacts-repositories-folder]
    - !reference [.clone-content-test-conf]

build-machines-report-job:
  extends:
    - .build-machines-report-schedule-rule
    - .before-script-build-machines-report
  tags:
    - cortex-content-1738  #The tag is bound to an identifier that grants access to Google resources.
  stage: build-machines-report
  artifacts:
      expire_in: 30 days
      paths:
        - ${ARTIFACTS_FOLDER}/*
        - public
      when: always
  variables:
    ARTIFACTS_FOLDER: artifacts
    ARTIFACT_PATH: ${CI_PROJECT_DIR}/${ARTIFACTS_FOLDER}
    SLACK_CHANNEL: $SLACK_CHANNEL
    CI_PIPELINE_URL: $CI_PIPELINE_URL
    GITLAB_ARTIFACTS_URL: https://xdr.docs-prod.xdr.pan.local/-/cortex-content/infra/-/jobs
  script:
    - EXIT_CODE=0
    - export PYTHONPATH="${PYTHONPATH}:${CI_PROJECT_DIR}"
    - poetry run python3 -u "${CI_PROJECT_DIR}/Tests/scripts/build_machines_report.py" --cloud_servers_path "${CLOUD_SAAS_SERVERS_PATH}" -o "${ARTIFACT_PATH}" --name-mapping_path "${CI_PROJECT_DIR}/config/name_mapping.json" 2>&1 | tee -a "${ARTIFACTS_FOLDER}/logs/build_machines_report_log.log" || EXIT_CODE=$?
    - exit $EXIT_CODE

pages:
  stage: build-machines-report-pages
  extends:
    - .build-machines-report-schedule-rule-pages
    - .before-script-build-machines-report
  needs:
    - build-machines-report-job
  artifacts:
    expire_in: 30 days
    paths:
      - public
    when: always
  variables:
    ARTIFACTS_FOLDER: artifacts
    ARTIFACT_PATH: ${CI_PROJECT_DIR}/${ARTIFACTS_FOLDER}
  script:
    - mkdir -p public || echo "Public Folder already exist."
    - cp -f "${ARTIFACT_PATH}/index.html" "public/index.html"

build-machines-report-fan-in:
  stage: fan-in
  extends:
    - .build-machines-report-schedule-rule-always
  script:
    - echo "fan in"

build-machines-report-slack-notify:
  extends:
    - .build-machines-report-schedule-rule-always
    - .trigger-slack-notification
  variables:
    PIPELINE_TO_QUERY: $CI_PIPELINE_ID
    JOB_NAME: "build-machines-report-fan-in"
    SLACK_CHANNEL: $SLACK_CHANNEL
    SLACK_JOB: 'true'
    ARTIFACTS_FOLDER: artifacts
    ARTIFACT_PATH: ${CI_PROJECT_DIR}/${ARTIFACTS_FOLDER}
    SLACK_MSG_FILE: "${ARTIFACT_PATH}/slack_msg.txt"
    SLACK_MSG_ATTACHMENTS: "${ARTIFACT_PATH}/slack_attachments.json"
    WORKFLOW: "Build Machines Report"
    SLACK_ALLOW_FAILURE: 'false'
