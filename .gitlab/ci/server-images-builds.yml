.build_docker_image: &build-docker-image
  - echo "building $DOCKER_BUILD_DIR"
  - git checkout -B $CI_COMMIT_BRANCH $CI_COMMIT_SHA
  - cp -r .gitlab/ci/ci_resources "$DOCKER_BUILD_DIR/ci_resources"
  - gcloud auth configure-docker ${DOCKER_IO_DOMAIN}
  - docker build $DOCKER_BUILD_DIR -t "test/$DOCKER_BUILD_DIR" --build-arg=DOCKER_IO=${DOCKER_IO}

.create_image: &create-image
  - |
    export BUILD_NUMBER=$(echo "$INSTALLER_URL" | grep -o -E "\-[0-9]+/" | grep -o -E "[0-9]+")
    echo "BUILD_NUMBER: ${BUILD_NUMBER}"
    export SERVER_IMG_NAME="server-image-$VERSION-$BUILD_NUMBER-$(date -u +"%Y-%m-%d")"
    echo "SERVER_IMG_NAME: ${SERVER_IMG_NAME}"
    export BASE_INSTANCE_NAME="template-${CI_PIPELINE_ID}-${SERVER_IMG_NAME}"
    echo "BASE_INSTANCE_NAME: ${BASE_INSTANCE_NAME}"
    echo "INSTALLER_URL: ${INSTALLER_URL}"
    export DOCKER_BUILD_DIR="server-image-build"
  - *build-docker-image
  - ./server-image-build/run.sh

.build-server-dev-images-schedule-rule:
  rules:
    - if: '$CI_PIPELINE_SOURCE =~ /^(schedule|trigger)$/ && $BUILD_TYPE == "BUILD_SERVER_DEV_IMAGE"'

.build-server-ga-images-schedule-rule:
  rules:
    - if: '$CI_PIPELINE_SOURCE =~ /^(schedule|trigger)$/ && $BUILD_TYPE == "BUILD_SERVER_GA_IMAGE"'

.delete-server-images-schedule-rule:
  rules:
    - if: '$CI_PIPELINE_SOURCE =~ /^(schedule|trigger)$/ && $BUILD_TYPE == "DELETE_SERVER_IMAGES"'

.docker-job:
  tags:
    - gce
  services:
    - name: ${DOCKER_IO}/library/docker:dind
      alias: docker
  before_script:
    - until docker info &> /dev/null; do sleep 1; done
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""

.config-pip:
  before_script:
    - cp .gitlab/ci/ci_resources/pip.conf /etc/pip.conf

Build-Server-Dev-Image-job:
  stage: build-server-images
  needs: []
  extends:
    - .build-server-dev-images-schedule-rule # put in comment for testing
    - .docker-job
  script:
    - gcloud auth activate-service-account --key-file $XSOAR_SERVER_STORAGE_CREDS --quiet
    - export VERSION="master"
    - export LAST_SUCCESS_BUILD_PATH=$(gsutil ls -d "gs://xsoar-ci-artifacts-server/server/dev-6-??????/0/ci_status_success" | tail -n 1 | grep -o -E "gs://xsoar-ci-artifacts-server/server/dev-6-[0-9]+/0")
    - export INSTALLER_URL="xsoar-ci-artifacts-server/$(gsutil ls -d "$LAST_SUCCESS_BUILD_PATH/demistoserver-*.sh" | grep -o -E "server/dev-6-[0-9]+/0/demistoserver-[0-9.-]+\.sh")"
    - gcloud auth revoke --all --quiet || echo "expected"
    - *create-image

Build-Server-6.12-Image-job:
  stage: build-server-images
  needs: []
  extends:
    - .build-server-ga-images-schedule-rule # put in comment for testing
    - .docker-job
  script:
    - gcloud auth activate-service-account --key-file $XSOAR_SERVER_STORAGE_CREDS --quiet
    - export VERSION="ga-6-12"
    - export INSTALLER_URL="xsoar-ci-artifacts-server/$(gsutil ls -d "gs://xsoar-ci-artifacts-server/server/6.12.0-[0-9]*/0/demistoserver-*.sh" | tail -n 1 | grep -o -E "server/[0-9.-]+/0/demistoserver-[0-9.-]+\.sh")"
    - gcloud auth revoke --all --quiet || echo "expected"
    - *create-image

Build-Server-6.11-Image-job:
  stage: build-server-images
  needs: []
  extends:
    - .build-server-ga-images-schedule-rule # put in comment for testing
    - .docker-job
  script:
    - gcloud auth activate-service-account --key-file $XSOAR_SERVER_STORAGE_CREDS --quiet
    - export VERSION="ga-6-11"
    - export INSTALLER_URL="xsoar-ci-artifacts-server/$(gsutil ls -d "gs://xsoar-ci-artifacts-server/server/6.11.0-[0-9]*/0/demistoserver-*.sh" | tail -n 1 | grep -o -E "server/[0-9.-]+/0/demistoserver-[0-9.-]+\.sh")"
    - gcloud auth revoke --all --quiet || echo "expected"
    - *create-image

Build-Server-6.10-Image-job:
  stage: build-server-images
  needs: []
  extends:
    - .build-server-ga-images-schedule-rule # put in comment for testing
    - .docker-job
  script:
    - gcloud auth activate-service-account --key-file $XSOAR_SERVER_STORAGE_CREDS --quiet
    - export VERSION="ga-6-10"
    - export INSTALLER_URL="xsoar-ci-artifacts-server/$(gsutil ls -d "gs://xsoar-ci-artifacts-server/server/6.10.0-[0-9]*/0/demistoserver-*.sh" | tail -n 1 | grep -o -E "server/[0-9.-]+/0/demistoserver-[0-9.-]+\.sh")"
    - gcloud auth revoke --all --quiet || echo "expected"
    - *create-image

Build-Server-6.9-Image-job:
  stage: build-server-images
  needs: []
  extends:
    - .build-server-ga-images-schedule-rule # put in comment for testing
    - .docker-job
  script:
    - gcloud auth activate-service-account --key-file $XSOAR_SERVER_STORAGE_CREDS --quiet
    - export VERSION="ga-6-9"
    - export INSTALLER_URL="xsoar-ci-artifacts-server/$(gsutil ls -d "gs://xsoar-ci-artifacts-server/server/6.9.0-[0-9]*/0/demistoserver-*.sh" | tail -n 1 | grep -o -E "server/[0-9.-]+/0/demistoserver-[0-9.-]+\.sh")"
    - gcloud auth revoke --all --quiet || echo "expected"
    - *create-image

Delete-Server-Images:
  stage: delete-server-images
  needs: []
  extends:
    - .delete-server-images-schedule-rule # put in comment for testing
    - .config-pip
  script:
    - cd gcp
    - python3 -m pip install google-cloud-compute
    - python3 ./delete_old_images.py --server-version "master" --images-to-reserve 20 --creds $XSOAR_CONTENT_BUILD_CREDS
    - python3 ./delete_old_images.py --server-version "ga-6-12" --images-to-reserve 10 --creds $XSOAR_CONTENT_BUILD_CREDS
    - python3 ./delete_old_images.py --server-version "ga-6-11" --images-to-reserve 10 --creds $XSOAR_CONTENT_BUILD_CREDS
    - python3 ./delete_old_images.py --server-version "ga-6-10" --images-to-reserve 10 --creds $XSOAR_CONTENT_BUILD_CREDS
    - python3 ./delete_old_images.py --server-version "ga-6-9" --images-to-reserve 10 --creds $XSOAR_CONTENT_BUILD_CREDS

slack-notify-build-delete-server-images:
  when: always
  variables:
    PIPELINE_ID: "$CI_PIPELINE_ID"
    WORKFLOW: "$BUILD_TYPE"
    SLACK_CHANNEL: 'content-infra-images'
    SLACK_JOB: 'true'
  extends:
    - .trigger-slack-notification
