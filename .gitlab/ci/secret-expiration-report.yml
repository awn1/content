.secret-expiration-report-schedule-rule:
  rules:
    - if: '$CI_PIPELINE_SOURCE =~ /^(schedule|trigger)$/ && $SECRET_EXPIRATION_REPORT == "true"'

.secret-expiration-report-job-before-script:
  before_script:
    - source .gitlab/helper_functions.sh
    - !reference [.setup-network-certs]
    - !reference [ .create-artifacts-repositories-folder ]
    - !reference [ .clone-content-test-conf ]

secret-expiration-report-job:
  tags:
    - cortex-content-1738
  extends:
    - .secret-expiration-report-schedule-rule
    - .secret-expiration-report-job-before-script

  stage: secret-expiration-report
  artifacts:
      expire_in: 30 days
      paths:
        - ${ARTIFACTS_FOLDER}/*
      when: always

  variables:
    ARTIFACTS_FOLDER: artifacts/secret_expiration_report
    ARTIFACT_PATH: ${CI_PROJECT_DIR}/${ARTIFACTS_FOLDER}
    SLACK_CHANNEL: $SLACK_CHANNEL
    CI_PIPELINE_URL: $CI_PIPELINE_URL
    GITLAB_ARTIFACTS_URL: https://xdr.docs-prod.xdr.pan.local/-/cortex-content/infra/-/jobs

  script:
    - EXIT_CODE=0
    - pip install -r ./SecretActions/requirements.txt -r ./SlackNotifier/requirements.txt
    - mkdir -p ${ARTIFACT_PATH}/logs || echo "Artifact Folder already exist."
    - export PYTHONPATH="${PYTHONPATH}:${CI_PROJECT_DIR}"
    - output_path="Report_$(date '+%Y-%m-%d').html"
    - python3 "${CI_PROJECT_DIR}/SecretActions/SecretExpirationReport/get_secret_expiration_report.py" -gpid ${GSM_PROJECT_ID} -e "${EXPIRY_DATE}" -sa "$GSM_SERVICE_ACCOUNT" -o $ARTIFACT_PATH/${output_path} 2>&1 | tee -a "${ARTIFACTS_FOLDER}/logs/secret_expiration_report_log.log" || EXIT_CODE=$?
    - python3 ./SlackNotifier/gitlab_basic_slack_notifier.py -s "${SLACK_TOKEN}" -t "Report was created and can be found <$GITLAB_ARTIFACTS_URL/${CI_JOB_ID}/artifacts/$ARTIFACTS_FOLDER/${output_path}|here>" --allow-failure true -ch "${SLACK_CHANNEL}" --name-mapping_path "${CI_PROJECT_DIR}/config/name_mapping.json" 2>&1 | tee -a "${ARTIFACTS_FOLDER}/logs/slack_notifier.log"
    - exit $EXIT_CODE
